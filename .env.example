# ===================================================
# FRONTEND ENVIRONMENT VARIABLES (.env)
# ===================================================
# Place this in your frontend root directory

# Google OAuth Client ID
# Get this from: https://console.cloud.google.com/apis/credentials
REACT_APP_GOOGLE_CLIENT_ID=your-google-client-id-here.apps.googleusercontent.com

# API URL (optional, defaults to localhost:5001)
REACT_APP_API_URL=http://localhost:5001

# ===================================================
# BACKEND ENVIRONMENT VARIABLES (.env)
# ===================================================
# Place this in your backend root directory

# Database Connection
# MySQL Database URL
# Format: mysql://username:password@host:port/database_name
DATABASE_URL="mysql://username:password@localhost:3306/project_app"

# Alternative: Individual database credentials (if not using DATABASE_URL)
# DB_HOST=localhost
# DB_PORT=3306
# DB_USER=username
# DB_PASSWORD=password
# DB_NAME=project_app

# Server Configuration
PORT=5000

# Google OAuth Client ID (same as frontend)
# Get this from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id-here.apps.googleusercontent.com

# JWT Secret Key (generate a secure random string)
# Example: use `openssl rand -base64 32` to generate
# NEVER use default value in production!
JWT_SECRET=your-very-secure-random-secret-key-here-change-in-production

# Node Environment
NODE_ENV=development

# Optional: Session Configuration
# SESSION_SECRET=another-random-secret-for-sessions

# Optional: CORS Configuration
# ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173

# Optional: Rate Limiting
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100

# ===================================================
# SETUP INSTRUCTIONS
# ===================================================
# 
# 1. CREATE GOOGLE OAUTH CREDENTIALS:
#    a. Go to https://console.cloud.google.com/
#    b. Create a new project or select existing
#    c. Enable Google+ API
#    d. Go to Credentials → Create Credentials → OAuth client ID
#    e. Application type: Web application
#    f. Authorized JavaScript origins: 
#       - http://localhost:3000
#       - http://localhost:5173
#    g. Authorized redirect URIs: 
#       - http://localhost:3000
#       - http://localhost:5173
#    h. Copy the Client ID
#
# 2. SETUP DATABASE:
#    a. Install MySQL (if not installed)
#    b. Create database:
#       mysql -u root -p
#       CREATE DATABASE project_app;
#    c. Update DATABASE_URL with your credentials
#
# 3. COPY THIS FILE:
#    Frontend: cp .env.example .env
#    Backend: cp .env.example .env
#
# 4. UPDATE VALUES:
#    a. Replace 'your-google-client-id-here' with actual Client ID
#    b. Update database credentials (username, password, database name)
#    c. Generate JWT Secret: openssl rand -base64 32
#    d. Update PORT if needed (default: 5000)
#
# 5. ADD TO .gitignore:
#    echo ".env" >> .gitignore
#    echo ".env.local" >> .gitignore
#
# 6. SECURITY NOTES:
#    - NEVER commit .env to git!
#    - Use different secrets for dev/staging/production
#    - Rotate secrets regularly in production
#    - Use strong, random values for all secrets
#
# ===================================================
# DATABASE SETUP (MySQL)
# ===================================================
#
# If you need to create the database and tables:
#
# 1. Login to MySQL:
#    mysql -u root -p
#
# 2. Create database:
#    CREATE DATABASE project_app CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
#
# 3. Create user (optional, for security):
#    CREATE USER 'taskmate_user'@'localhost' IDENTIFIED BY 'secure_password';
#    GRANT ALL PRIVILEGES ON project_app.* TO 'taskmate_user'@'localhost';
#    FLUSH PRIVILEGES;
#
# 4. Use the database:
#    USE project_app;
#
# 5. Create tables (example):
#    CREATE TABLE users (
#      id INT AUTO_INCREMENT PRIMARY KEY,
#      username VARCHAR(50) UNIQUE NOT NULL,
#      email VARCHAR(100) UNIQUE NOT NULL,
#      password VARCHAR(255),
#      full_name VARCHAR(100),
#      google_id VARCHAR(100) UNIQUE,
#      picture VARCHAR(255),
#      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
#      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
#    );
#
#    CREATE TABLE tasks (
#      id INT AUTO_INCREMENT PRIMARY KEY,
#      user_id INT NOT NULL,
#      task_name VARCHAR(255) NOT NULL,
#      detail TEXT,
#      due_date DATE,
#      progress VARCHAR(50) DEFAULT 'Not Started',
#      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
#      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
#      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
#    );
#
# ===================================================
# PRODUCTION DEPLOYMENT
# ===================================================
#
# For production, update:
# - NODE_ENV=production
# - DATABASE_URL with production database
# - GOOGLE_CLIENT_ID with production OAuth credentials
# - JWT_SECRET with strong random value
# - Add ALLOWED_ORIGINS with your production domain
# - Enable SSL/HTTPS
# - Set secure session cookies
# - Configure proper CORS settings
#
# ===================================================